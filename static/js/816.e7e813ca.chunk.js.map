{"version":3,"file":"static/js/816.e7e813ca.chunk.js","mappings":"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","sources":["firebase/firebase-config.js","pages/JoinQueue.js"],"sourcesContent":["// src/firebase/firebase-config.js\r\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.11.1/firebase-app.js\";\r\nimport { getAuth } from \"https://www.gstatic.com/firebasejs/10.11.1/firebase-auth.js\";\r\nimport { getFirestore } from \"https://www.gstatic.com/firebasejs/10.11.1/firebase-firestore.js\";\r\nimport { getMessaging, getToken, onMessage } from \"https://www.gstatic.com/firebasejs/10.11.1/firebase-messaging.js\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAhBlyXYwfLE1rXPcWRiouJfsp6gIpG894\",\r\n  authDomain: \"smartq-d015b.firebaseapp.com\",\r\n  projectId: \"smartq-d015b\",\r\n  storageBucket: \"smartq-d015b.firebasestorage.app\",\r\n  messagingSenderId: \"452644823738\",\r\n  appId: \"1:452644823738:web:7a133f086ff93200b39883\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst messaging = getMessaging(app);\r\n\r\n// Request notification permission if needed\r\nexport async function requestNotificationPermission() {\r\n  try {\r\n    const token = await getToken(messaging, { vapidKey: \"YOUR_VAPID_PUBLIC_KEY\" });\r\n    if (token) {\r\n      console.log(\"Notification Token:\", token);\r\n      return token;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Notification permission error:\", error);\r\n  }\r\n}\r\n\r\nonMessage(messaging, (payload) => {\r\n  console.log(\"Message received:\", payload);\r\n  alert(`Notification: ${payload.notification.title} - ${payload.notification.body}`);\r\n});\r\n\r\nexport { auth, db, messaging };\r\n","// src/pages/JoinQueue.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { doc, getDoc, updateDoc, arrayUnion } from 'https://www.gstatic.com/firebasejs/10.11.1/firebase-firestore.js';\r\n\r\nconst JoinQueue = () => {\r\n  const [queueName, setQueueName] = useState('');\r\n  const [queueCount, setQueueCount] = useState(0);\r\n  const [estWaitTime, setEstWaitTime] = useState(0);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [joinInfo, setJoinInfo] = useState({ name: '', email: '' });\r\n  const [loading, setLoading] = useState(true);\r\n  const [queueData, setQueueData] = useState(null);\r\n  const [searchParams] = useState(new URLSearchParams(window.location.search));\r\n  const queueId = searchParams.get('queueId');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loadQueueDetails = async () => {\r\n      // If no queueId is provided, immediately redirect to InvalidQueue page.\r\n      if (!queueId) {\r\n        navigate('/invalid-queue');\r\n        return;\r\n      }\r\n      try {\r\n        const queueRef = doc(db, \"queues\", queueId);\r\n        const queueSnap = await getDoc(queueRef);\r\n        if (!queueSnap.exists()) {\r\n          // If the queue document does not exist, redirect to InvalidQueue page.\r\n          navigate('/invalid-queue');\r\n          return;\r\n        }\r\n        const data = queueSnap.data();\r\n        // Prevent joining if the queue is not active.\r\n        if (data.status !== \"active\") {\r\n          alert(\"Sorry, queue has been paused. Try again later.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        setQueueData(data);\r\n        setQueueName(data.name || 'Queue');\r\n        setQueueCount(data.users ? data.users.length : 0);\r\n        setEstWaitTime(data.estimatedWaitTime || 0);\r\n      } catch (error) {\r\n        console.error(\"Error loading queue details:\", error);\r\n        setErrorMsg(\"Error loading queue details.\");\r\n      }\r\n      setLoading(false);\r\n    };\r\n    loadQueueDetails();\r\n  }, [queueId, navigate]);\r\n\r\n  const handleJoin = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email } = joinInfo;\r\n    if (!name || !email) return;\r\n    const userId = email; // Using email as a unique identifier\r\n\r\n    // If the user is already in the queue, alert and redirect.\r\n    if (queueData && queueData.users && queueData.users.find(u => u.userId === userId)) {\r\n      alert(\"You are already in the queue.\");\r\n      navigate(`/queue-status?queueId=${queueId}&userId=${encodeURIComponent(userId)}`);\r\n      return;\r\n    }\r\n    // In case the queue gets paused after details are loaded.\r\n    if (queueData && queueData.status !== \"active\") {\r\n      alert(\"Sorry, queue has been paused. Try again later.\");\r\n      return;\r\n    }\r\n    let newPosition = (queueData.users && queueData.users.length) || 0;\r\n    const newUser = { userId, name, email, position: newPosition };\r\n\r\n    try {\r\n      const queueRef = doc(db, \"queues\", queueId);\r\n      await updateDoc(queueRef, {\r\n        users: arrayUnion(newUser)\r\n      });\r\n      navigate(`/queue-status?queueId=${queueId}&userId=${encodeURIComponent(userId)}`);\r\n    } catch (error) {\r\n      console.error(\"Error joining queue:\", error);\r\n      setErrorMsg(\"Error joining queue. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading queue details...</p>;\r\n\r\n  return (\r\n    <div className=\"queue-status\" style={{ maxWidth: '400px', margin: '0 auto', padding: '1rem' }}>\r\n      <h2>{queueName} - Join the Queue</h2>\r\n      <p>Current number in queue: {queueCount}</p>\r\n      <p>Estimated wait time: {estWaitTime} minutes</p>\r\n      {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\r\n      <form onSubmit={handleJoin} style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Enter your name\" \r\n          value={joinInfo.name}\r\n          onChange={(e) => setJoinInfo({ ...joinInfo, name: e.target.value })}\r\n          required\r\n          style={{ padding: '0.5rem', fontSize: '16px' }}\r\n        />\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Enter your email\" \r\n          value={joinInfo.email}\r\n          onChange={(e) => setJoinInfo({ ...joinInfo, email: e.target.value })}\r\n          required\r\n          style={{ padding: '0.5rem', fontSize: '16px' }}\r\n        />\r\n        <button type=\"submit\" className=\"btn\" style={{ padding: '0.75rem', fontSize: '16px' }}>\r\n          Join Queue\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinQueue;\r\n"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","auth","getAuth","db","getFirestore","messaging","getMessaging","onMessage","payload","console","log","alert","notification","title","body","JoinQueue","queueName","setQueueName","useState","queueCount","setQueueCount","estWaitTime","setEstWaitTime","errorMsg","setErrorMsg","joinInfo","setJoinInfo","name","email","loading","setLoading","queueData","setQueueData","searchParams","URLSearchParams","window","location","search","queueId","get","navigate","useNavigate","useEffect","async","queueRef","doc","queueSnap","getDoc","exists","data","status","users","length","estimatedWaitTime","error","loadQueueDetails","_jsx","children","_jsxs","className","style","maxWidth","margin","padding","color","onSubmit","e","preventDefault","userId","find","u","encodeURIComponent","newPosition","newUser","position","updateDoc","arrayUnion","display","flexDirection","gap","type","placeholder","value","onChange","target","required","fontSize"],"sourceRoot":""}